<?xml version="1.0" encoding="UTF-8"?>
<helpdocument version="1.0">
  <meta>
    <topic id="mytools_mri_" indexer="include">
      <title xml-lang="en" id="tit"></title>
      <filename>/mytools.mri/Bundled.xhp</filename>
    </topic>
    <history>
      <created date="2013-05-27T22:46:32"></created>
      <lastedited date="2013-05-27T22:46:32"></lastedited>
    </history>
  </meta><body><paragraph id="hd_id52633720" level="1" role="heading" xml-lang="en">Bundled Macros</paragraph><bookmark branch="index" id="id_id13054596" xml-lang="en"><bookmark_value>Bundled Macros</bookmark_value></bookmark><paragraph id="par_id97120545" role="paragraph" xml-lang="en"> After version 1.0.0, MRI has macro support and it has bundled macros which can be executed though Macros - bundle.py entry in the main menu. The module of bundled macros includes not only used as macro but some macros which is used in the main menu. </paragraph><paragraph id="par_id70359506" role="paragraph" xml-lang="en">This document describes about each bundled macros which can be executed in macro menu. </paragraph><section id="sec_id90016288"><paragraph id="hd_id63162316" level="2" role="heading" xml-lang="en">Inspect Elements of Index Container </paragraph><paragraph id="par_id56500325" role="paragraph" xml-lang="en"> Inspects all elements of the current index container if com.sun.star.container.XIndexAccess interface is supported. </paragraph></section><section id="sec_id74111154"><paragraph id="hd_id04187553" level="2" role="heading" xml-lang="en">Inspect Elements of Named Container </paragraph><paragraph id="par_id98194275" role="paragraph" xml-lang="en"> Inspects all elements of the current named container if com.sun.star.container.XNameAccess interface is supported. </paragraph></section><section id="sec_id19850679"><paragraph id="hd_id40974566" level="2" role="heading" xml-lang="en">Inspect Elements of Enumeration Container </paragraph><paragraph id="par_id23018084" role="paragraph" xml-lang="en"> Inspects all elements of the current enumeration container. The target have to be supported by com.sun.star.container.XEnumerationAccess or com.sun.star.container.XEnumeration interface. </paragraph></section><section id="sec_id22482282"><paragraph id="hd_id90026121" level="2" role="heading" xml-lang="en">Inspect Elements of Sequence </paragraph><paragraph id="par_id88119549" role="paragraph" xml-lang="en"> Inspects all element of the current one-dimensional sequence. </paragraph></section><section id="sec_id43866559"><paragraph id="hd_id26654319" level="2" role="heading" xml-lang="en">Inspect Accessible Children </paragraph><paragraph id="par_id41742393" role="paragraph" xml-lang="en"> Try to inspect all children in the accessible hierarchy. This macro may freeze your office. </paragraph></section><section id="sec_id22317567"><paragraph id="hd_id04274498" level="2" role="heading" xml-lang="en">Inspect Data Sequence of Chart </paragraph><paragraph id="par_id81552999" role="paragraph" xml-lang="en"> Execute with chart document as a target which supports com.sun.star.chart.ChartDocument service. All data sequences will be inspected. </paragraph></section><section id="sec_id15549324"><paragraph id="hd_id72985310" level="2" role="heading" xml-lang="en">Diff </paragraph><paragraph id="par_id41454240" role="paragraph" xml-lang="en"> Compare current target with another one which is take from another MRI instance. </paragraph></section><section id="sec_id05576196"><paragraph id="hd_id41701362" level="2" role="heading" xml-lang="en">Diff in History </paragraph><paragraph id="par_id36738468" role="paragraph" xml-lang="en"> Compare current target with another one which is chosen in the history. </paragraph></section><section id="sec_id71971102"><paragraph id="hd_id68996954" level="2" role="heading" xml-lang="en">Modifiable Configuration </paragraph><paragraph id="par_id05093183" role="paragraph" xml-lang="en"> The configuration target created with Targets - Configuration entry of the main menu is not modifiable. But one which is created by this entry is modifiable and updatable. </paragraph></section><section id="sec_id58745279"><paragraph id="hd_id16892813" level="2" role="heading" xml-lang="en">Import Macros </paragraph><paragraph id="par_id33647080" role="paragraph" xml-lang="en"> Users can keep their own macro files in the directory specified by the configuration of MRI. This macro entry allows you to distribute your macro for other MRI users.  </paragraph><paragraph id="par_id59052722" role="paragraph" xml-lang="en">Importer allows to load py, zip, tar.gz and tar.bz2 files and extract files into your macros directory. </paragraph><paragraph id="par_id51842507" role="paragraph" xml-lang="en">Make a copy of your macro and make an archive for macro package in zip, tar.gz or tar.bz2 format. If you put README file into your archive, it is shown during deployment of your package. </paragraph></section><section id="sec_id24572640"><paragraph id="hd_id44020966" level="2" role="heading" xml-lang="en">Reload Property Values </paragraph><paragraph id="par_id23170128" role="paragraph" xml-lang="en"> Force to reload property values on current inspected target. If you change the property value of the target from somewhere, choose this entry to update property values. </paragraph></section><section id="sec_id95442931"><paragraph id="hd_id52381570" level="2" role="heading" xml-lang="en">Reload Macros Menu </paragraph><paragraph id="par_id42095498" role="paragraph" xml-lang="en"> Regenerate macros menu. Macros menu is statically created and it does not check file modification, so please choose this entry to reload macro file. This entry is useful for macro editors. </paragraph></section><section id="sec_id67764180"><paragraph id="hd_id26126105" level="2" role="heading" xml-lang="en">Reload Current Code Generator </paragraph><paragraph id="par_id84654772" role="paragraph" xml-lang="en"> Reload generator module which is used to generate code now. This entry allows you to reload modification on generator code, is useful for editors of code generators. </paragraph></section><section id="sec_id00207416"><paragraph id="hd_id57515471" level="2" role="heading" xml-lang="en">Small Console </paragraph><paragraph id="par_id61819995" role="paragraph" xml-lang="en"> This macro allows you to do something interactively with MRI or targets in Python.  </paragraph><paragraph id="par_id95671876" role="paragraph" xml-lang="en">Following variables are prepared to access something. </paragraph><list format="1" type="unordered"><listitem> console: console itself. </listitem><listitem> ctx: component context. </listitem><listitem> create: This is a function which takes one string as service name to instantiate. Additionally, tuple of initialize arguments can be passed. </listitem><listitem> uno: uno.py </listitem><listitem> mri: MRI instance. </listitem><listitem> __name__: __console__ </listitem><listitem> __doc__: text for console.help() </listitem></list><paragraph id="par_id15472914" role="paragraph" xml-lang="en" /><paragraph id="par_id22602272" role="paragraph" xml-lang="en">The mri variable holds current target in its current instance variable. You can access it as follows:  </paragraph><paragraph id="par_id85097015" role="code" xml-lang="en">&gt;&gt;&gt; obj = mri.current.target<br />
</paragraph><paragraph id="par_id67558349" role="paragraph" xml-lang="en">The target instance variable keeps real target. </paragraph></section></body>
</helpdocument>